export default [
  {
    "name": "Vue.js 文档",
    "description": "渐进式 JavaScript 框架，用于构建用户界面。提供响应式数据绑定、组件系统和虚拟 DOM，支持单文件组件开发。文档包含从基础到高级的概念讲解、API 参考和最佳实践指南。",
    "icon": "fab fa-vuejs",
    "bg_color_class": "bg-green-500/20",
    "text_color_class": "text-green-400",
    "url": "https://vuejs.org",
    "score": 4.9,
    "tags": ["前端框架", "JavaScript", "SPA"],
    "category": "前端框架"
  },
  {
    "name": "React 文档",
    "description": "用于构建用户界面的 JavaScript 库。采用组件化架构和 JSX 语法，支持函数组件和类组件，提供 Hooks API 管理状态和生命周期。文档涵盖核心概念、高级指引和性能优化策略。",
    "icon": "fab fa-react",
    "bg_color_class": "bg-blue-500/20",
    "text_color_class": "text-blue-400",
    "url": "https://reactjs.org",
    "score": 4.8,
    "tags": ["UI库", "组件化", "虚拟DOM"],
    "category": "前端框架"
  },
  {
    "name": "Node.js 文档",
    "description": "基于 Chrome V8 引擎的 JavaScript 运行时环境。提供非阻塞 I/O 和事件驱动架构，支持构建高性能网络应用。文档包含核心模块、文件系统操作、网络编程和异步编程指南。",
    "icon": "fab fa-node-js",
    "bg_color_class": "bg-amber-500/20",
    "text_color_class": "text-amber-400",
    "url": "https://nodejs.org",
    "score": 4.7,
    "tags": ["后端开发", "JavaScript", "运行时"],
    "category": "后端开发"
  },
  // 后续资源将按此格式继续...
  {
    "name": "Python 文档",
    "description": "Python 官方文档，涵盖语言核心特性、标准库和开发实践。包含教程、语言参考和模块索引，支持从基础语法到高级特性（如装饰器、生成器）的学习路径。",
    "icon": "fab fa-python",
    "bg_color_class": "bg-purple-500/20",
    "text_color_class": "text-purple-400",
    "url": "https://docs.python.org",
    "score": 4.9,
    "tags": ["编程语言", "后端", "脚本"],
    "category": "编程语言"
  },
  {
    "name": "TypeScript 文档",
    "description": "JavaScript 的超集，添加静态类型系统。提供类型注解、接口、泛型等特性，增强代码可维护性。文档包含类型系统详解、编译器配置和与 JavaScript 互操作指南。",
    "icon": "fas fa-code",
    "bg_color_class": "bg-indigo-500/20",
    "text_color_class": "text-indigo-400",
    "url": "https://www.typescriptlang.org",
    "score": 4.8,
    "tags": ["静态类型", "JavaScript", "编译器"],
    "category": "编程语言"
  },
  {
    "name": "Docker 文档",
    "description": "容器化平台，实现应用隔离和跨环境部署。提供镜像管理、容器编排和网络配置功能。文档涵盖 Dockerfile 编写、容器生命周期管理和 Docker Compose 使用指南。",
    "icon": "fab fa-docker",
    "bg_color_class": "bg-cyan-500/20",
    "text_color_class": "text-cyan-400",
    "url": "https://docs.docker.com",
    "score": 4.7,
    "tags": ["容器化", "DevOps", "部署"],
    "category": "DevOps"
  },
  {
    "name": "Kubernetes 文档",
    "description": "容器编排系统，自动化容器部署、扩展和管理。提供声明式配置、服务发现和负载均衡功能。文档包含架构解析、资源对象定义和集群运维最佳实践。",
    "icon": "fas fa-cubes",
    "bg_color_class": "bg-blue-600/20",
    "text_color_class": "text-blue-500",
    "url": "https://kubernetes.io",
    "score": 4.8,
    "tags": ["容器编排", "云原生", "微服务"],
    "category": "DevOps"
  },
  {
    "name": "MongoDB 文档",
    "description": "面向文档的 NoSQL 数据库，使用 JSON-like 格式存储数据。提供灵活的数据模型、水平扩展和聚合框架。文档包含 CRUD 操作、索引优化和事务管理指南。",
    "icon": "fas fa-database",
    "bg_color_class": "bg-teal-500/20",
    "text_color_class": "text-teal-400",
    "url": "https://docs.mongodb.com",
    "score": 4.6,
    "tags": ["NoSQL", "数据库", "文档存储"],
    "category": "数据库"
  },
  {
    "name": "PostgreSQL 文档",
    "description": "开源关系型数据库，支持复杂查询和 ACID 事务。提供 JSON 支持、空间数据处理和全文搜索功能。文档包含 SQL 语法、性能调优和高可用性配置指南。",
    "icon": "fas fa-database",
    "bg_color_class": "bg-blue-400/20",
    "text_color_class": "text-blue-300",
    "url": "https://www.postgresql.org/docs",
    "score": 4.9,
    "tags": ["SQL", "关系型数据库", "ACID"],
    "category": "数据库"
  },
  {
    "name": "AWS 文档",
    "description": "亚马逊云服务官方文档，涵盖 200+ 云服务。包含 EC2、S3、Lambda 等核心服务的配置指南、API 参考和架构最佳实践。提供 SDK 使用示例和安全性配置指引。",
    "icon": "fab fa-aws",
    "bg_color_class": "bg-orange-500/20",
    "text_color_class": "text-orange-400",
    "url": "https://docs.aws.amazon.com",
    "score": 4.7,
    "tags": ["云计算", "IaaS", "云服务"],
    "category": "云服务"
  },
  {
    "name": "Vite 文档",
    "description": "下一代前端构建工具，提供极速的开发服务器启动和热更新。支持原生 ES 模块、按需编译和框架无关配置。文档包含插件开发、生产优化和框架集成指南。",
    "icon": "fas fa-bolt",
    "bg_color_class": "bg-red-500/20",
    "text_color_class": "text-red-400",
    "url": "https://vitejs.dev",
    "score": 4.8,
    "tags": ["构建工具", "前端", "开发工具"],
    "category": "构建工具"
  },
  {
    "name": "Webpack 文档",
    "description": "JavaScript 模块打包器，支持代码分割和资源优化。提供 loader 和插件系统处理各种静态资源。文档包含配置详解、性能优化和自定义插件开发指南。",
    "icon": "fas fa-box",
    "bg_color_class": "bg-yellow-500/20",
    "text_color_class": "text-yellow-400",
    "url": "https://webpack.js.org",
    "score": 4.6,
    "tags": ["模块打包", "构建工具", "代码分割"],
    "category": "构建工具"
  },
  {
    "name": "GraphQL 文档",
    "description": "API 查询语言，提供强类型系统和声明式数据获取。支持客户端精确指定需要的数据结构。文档包含类型系统、查询语法和 Apollo/Relay 集成指南。",
    "icon": "fas fa-project-diagram",
    "bg_color_class": "bg-pink-500/20",
    "text_color_class": "text-pink-400",
    "url": "https://graphql.org",
    "score": 4.7,
    "tags": ["API", "数据查询", "类型系统"],
    "category": "API"
  },
  {
    "name": "Express.js 文档",
    "description": "Node.js Web 应用框架，提供简洁的路由和中间件系统。支持 RESTful API 开发，具有丰富的中间件生态。文档包含路由配置、错误处理和模板引擎集成指南。",
    "icon": "fas fa-server",
    "bg_color_class": "bg-gray-500/20",
    "text_color_class": "text-gray-400",
    "url": "https://expressjs.com",
    "score": 4.5,
    "tags": ["后端框架", "Node.js", "RESTful"],
    "category": "后端框架"
  },
  {
    "name": "Next.js 文档",
    "description": "React 框架，支持服务端渲染和静态站点生成。提供文件路由系统、API 路由和增量静态再生功能。文档包含数据获取策略、性能优化和部署指南。",
    "icon": "fas fa-forward",
    "bg_color_class": "bg-black/20",
    "text_color_class": "text-black",
    "url": "https://nextjs.org",
    "score": 4.9,
    "tags": ["SSR", "React框架", "全栈"],
    "category": "前端框架"
  },
  {
    "name": "Tailwind CSS 文档",
    "description": "实用优先的 CSS 框架，提供原子化类构建定制设计。支持响应式设计和深色模式，可配置性强。文档包含核心概念、自定义主题和优化生产构建指南。",
    "icon": "fas fa-wind",
    "bg_color_class": "bg-teal-600/20",
    "text_color_class": "text-teal-500",
    "url": "https://tailwindcss.com",
    "score": 4.8,
    "tags": ["CSS框架", "实用工具", "响应式设计"],
    "category": "CSS框架"
  },
  {
    "name": "Jest 文档",
    "description": "JavaScript 测试框架，支持快照测试和代码覆盖率。提供零配置体验和模拟功能。文档包含测试编写、异步测试和 React/Vue 组件测试指南。",
    "icon": "fas fa-vial",
    "bg_color_class": "bg-red-600/20",
    "text_color_class": "text-red-500",
    "url": "https://jestjs.io",
    "score": 4.7,
    "tags": ["测试框架", "单元测试", "覆盖率"],
    "category": "测试"
  },
  {
    "name": "Electron 文档",
    "description": "使用 Web 技术构建跨平台桌面应用。基于 Chromium 和 Node.js，支持原生 API 访问。文档包含应用架构、进程通信和打包分发指南。",
    "icon": "fas fa-desktop",
    "bg_color_class": "bg-indigo-600/20",
    "text_color_class": "text-indigo-500",
    "url": "https://www.electronjs.org",
    "score": 4.6,
    "tags": ["桌面应用", "跨平台", "JavaScript"],
    "category": "桌面开发"
  },
  {
    "name": "React Native 文档",
    "description": "使用 React 构建原生移动应用的框架。提供跨平台组件和原生模块集成。文档包含组件使用、导航配置和性能优化指南。",
    "icon": "fas fa-mobile-alt",
    "bg_color_class": "bg-blue-700/20",
    "text_color_class": "text-blue-600",
    "url": "https://reactnative.dev",
    "score": 4.5,
    "tags": ["移动开发", "跨平台", "React"],
    "category": "移动开发"
  },
  {
    "name": "Rust 文档",
    "description": "系统编程语言，注重安全性和并发性。提供所有权系统和零成本抽象。文档包含语言教程、标准库参考和 Cargo 包管理指南。",
    "icon": "fas fa-cog",
    "bg_color_class": "bg-orange-600/20",
    "text_color_class": "text-orange-500",
    "url": "https://www.rust-lang.org",
    "score": 4.9,
    "tags": ["系统编程", "内存安全", "高性能"],
    "category": "编程语言"
  },
  {
    "name": "Go 文档",
    "description": "静态类型编译语言，专为并发设计。提供垃圾回收和简洁语法。文档包含语言规范、标准库和并发模式指南。",
    "icon": "fas fa-golang",
    "bg_color_class": "bg-cyan-600/20",
    "text_color_class": "text-cyan-500",
    "url": "https://golang.org",
    "score": 4.8,
    "tags": ["并发", "系统编程", "微服务"],
    "category": "编程语言"
  },
  {
    "name": "NestJS 文档",
    "description": "Node.js 渐进式框架，构建高效可扩展服务端应用。采用模块化架构，支持 TypeScript。文档包含控制器、提供者、中间件和微服务指南。",
    "icon": "fas fa-feather",
    "bg_color_class": "bg-red-700/20",
    "text_color_class": "text-red-600",
    "url": "https://nestjs.com",
    "score": 4.7,
    "tags": ["Node.js框架", "TypeScript", "微服务"],
    "category": "后端框架"
  },
  // 更多资源...
  {
    "name": "Three.js 文档",
    "description": "WebGL 3D 库，简化浏览器中3D内容创建。提供场景图、材质和动画系统。文档包含基础概念、示例代码和性能优化指南。",
    "icon": "fas fa-cube",
    "bg_color_class": "bg-purple-700/20",
    "text_color_class": "text-purple-600",
    "url": "https://threejs.org",
    "score": 4.6,
    "tags": ["WebGL", "3D渲染", "游戏开发"],
    "category": "图形与游戏"
  },
  {
    "name": "TensorFlow.js 文档",
    "description": "浏览器和 Node.js 的机器学习库。支持模型训练、转换和部署。文档包含预训练模型使用、自定义模型开发和可视化指南。",
    "icon": "fas fa-brain",
    "bg_color_class": "bg-orange-700/20",
    "text_color_class": "text-orange-600",
    "url": "https://www.tensorflow.org/js",
    "score": 4.5,
    "tags": ["机器学习", "AI", "神经网络"],
    "category": "AI与数据科学"
  },
  {
    "name": "D3.js 文档",
    "description": "数据驱动文档库，用于创建动态数据可视化。提供数据绑定和 DOM 操作功能。文档包含核心概念、力导向图和地理可视化指南。",
    "icon": "fas fa-chart-bar",
    "bg_color_class": "bg-green-600/20",
    "text_color_class": "text-green-500",
    "url": "https://d3js.org",
    "score": 4.7,
    "tags": ["数据可视化", "图表", "数据分析"],
    "category": "数据可视化"
  },
  {
    "name": "Socket.IO 文档",
    "description": "实时应用框架，支持双向事件通信。提供自动重连和房间功能。文档包含客户端/服务器 API、广播机制和性能优化指南。",
    "icon": "fas fa-network-wired",
    "bg_color_class": "bg-yellow-600/20",
    "text_color_class": "text-yellow-500",
    "url": "https://socket.io",
    "score": 4.6,
    "tags": ["实时通信", "WebSocket", "事件驱动"],
    "category": "网络通信"
  },
  {
    "name": "Vue.js 文档",
    "description": "渐进式 JavaScript 框架，用于构建用户界面。提供响应式数据绑定、组件系统和虚拟 DOM，支持单文件组件开发。文档包含从基础到高级的概念讲解、API 参考和最佳实践指南。",
    "icon": "fab fa-vuejs",
    "bg_color_class": "bg-green-500/20",
    "text_color_class": "text-green-400",
    "url": "https://vuejs.org",
    "score": 4.9,
    "tags": ["前端框架", "JavaScript", "SPA"],
    "category": "前端框架"
  },
  {
    "name": "React 文档",
    "description": "用于构建用户界面的 JavaScript 库。采用组件化架构和 JSX 语法，支持函数组件和类组件，提供 Hooks API 管理状态和生命周期。文档涵盖核心概念、高级指引和性能优化策略。",
    "icon": "fab fa-react",
    "bg_color_class": "bg-blue-500/20",
    "text_color_class": "text-blue-400",
    "url": "https://reactjs.org",
    "score": 4.8,
    "tags": ["UI库", "组件化", "虚拟DOM"],
    "category": "前端框架"
  },
  {
    "name": "Angular 文档",
    "description": "基于 TypeScript 的 Web 应用框架，提供完整的 MVC 架构。包含依赖注入、双向数据绑定和强大的 CLI 工具。文档涵盖组件开发、路由配置和表单处理等核心主题。",
    "icon": "fab fa-angular",
    "bg_color_class": "bg-red-500/20",
    "text_color_class": "text-red-400",
    "url": "https://angular.io",
    "score": 4.7,
    "tags": ["前端框架", "TypeScript", "MVC"],
    "category": "前端框架"
  },
  {
    "name": "Svelte 文档",
    "description": "编译时框架，将组件转换为高效的 JavaScript 代码。无虚拟 DOM 开销，运行时轻量级。文档包含反应式声明、组件生命周期和状态管理的最佳实践。",
    "icon": "fas fa-code-branch",
    "bg_color_class": "bg-orange-500/20",
    "text_color_class": "text-orange-400",
    "url": "https://svelte.dev",
    "score": 4.8,
    "tags": ["前端框架", "编译时", "轻量级"],
    "category": "前端框架"
  },
  {
    "name": "Node.js 文档",
    "description": "基于 Chrome V8 引擎的 JavaScript 运行时环境。提供非阻塞 I/O 和事件驱动架构，支持构建高性能网络应用。文档包含核心模块、文件系统操作、网络编程和异步编程指南。",
    "icon": "fab fa-node-js",
    "bg_color_class": "bg-amber-500/20",
    "text_color_class": "text-amber-400",
    "url": "https://nodejs.org",
    "score": 4.7,
    "tags": ["后端开发", "JavaScript", "运行时"],
    "category": "后端开发"
  },
  {
    "name": "Django 文档",
    "description": "高级 Python Web 框架，遵循 DRY 原则和 MVT 模式。提供 ORM、认证系统和内置管理界面。文档包含快速入门、模型设计和安全防护指南。",
    "icon": "fas fa-leaf",
    "bg_color_class": "bg-green-600/20",
    "text_color_class": "text-green-500",
    "url": "https://docs.djangoproject.com",
    "score": 4.8,
    "tags": ["Python框架", "全栈", "ORM"],
    "category": "后端框架"
  },
  {
    "name": "Spring Boot 文档",
    "description": "Java 企业级开发框架，简化 Spring 应用初始搭建和开发。提供自动配置、嵌入式服务器和 starter 依赖。文档包含 REST API 开发、数据访问和微服务构建指南。",
    "icon": "fas fa-bolt",
    "bg_color_class": "bg-green-700/20",
    "text_color_class": "text-green-600",
    "url": "https://spring.io/projects/spring-boot",
    "score": 4.8,
    "tags": ["Java框架", "微服务", "企业级"],
    "category": "后端框架"
  },
  {
    "name": "Ruby on Rails 文档",
    "description": "全栈 Web 应用框架，遵循约定优于配置原则。提供 ActiveRecord ORM 和强大的路由系统。文档包含 MVC 架构、数据库迁移和 API 开发指南。",
    "icon": "fas fa-gem",
    "bg_color_class": "bg-red-600/20",
    "text_color_class": "text-red-500",
    "url": "https://rubyonrails.org",
    "score": 4.7,
    "tags": ["Ruby框架", "全栈", "约定优于配置"],
    "category": "后端框架"
  },
  {
    "name": "Python 文档",
    "description": "Python 官方文档，涵盖语言核心特性、标准库和开发实践。包含教程、语言参考和模块索引，支持从基础语法到高级特性（如装饰器、生成器）的学习路径。",
    "icon": "fab fa-python",
    "bg_color_class": "bg-purple-500/20",
    "text_color_class": "text-purple-400",
    "url": "https://docs.python.org",
    "score": 4.9,
    "tags": ["编程语言", "后端", "脚本"],
    "category": "编程语言"
  },
  {
    "name": "TypeScript 文档",
    "description": "JavaScript 的超集，添加静态类型系统。提供类型注解、接口、泛型等特性，增强代码可维护性。文档包含类型系统详解、编译器配置和与 JavaScript 互操作指南。",
    "icon": "fas fa-code",
    "bg_color_class": "bg-indigo-500/20",
    "text_color_class": "text-indigo-400",
    "url": "https://www.typescriptlang.org",
    "score": 4.8,
    "tags": ["静态类型", "JavaScript", "编译器"],
    "category": "编程语言"
  },
  {
    "name": "Java 文档",
    "description": "Oracle 官方 Java 文档，涵盖语言规范、核心 API 和开发工具。包含集合框架、并发编程和流式处理等高级主题，提供 JDK 工具使用指南。",
    "icon": "fab fa-java",
    "bg_color_class": "bg-red-700/20",
    "text_color_class": "text-red-600",
    "url": "https://docs.oracle.com/javase",
    "score": 4.8,
    "tags": ["编程语言", "面向对象", "企业级"],
    "category": "编程语言"
  },
  {
    "name": "Swift 文档",
    "description": "Apple 开发的现代编程语言，用于 iOS/macOS 应用开发。提供安全的内存管理、协议扩展和函数式编程特性。文档包含语言指南、标准库和 SwiftUI 框架参考。",
    "icon": "fas fa-apple-alt",
    "bg_color_class": "bg-orange-500/20",
    "text_color_class": "text-orange-400",
    "url": "https://docs.swift.org",
    "score": 4.8,
    "tags": ["移动开发", "iOS", "Apple"],
    "category": "编程语言"
  },
  {
    "name": "Docker 文档",
    "description": "容器化平台，实现应用隔离和跨环境部署。提供镜像管理、容器编排和网络配置功能。文档涵盖 Dockerfile 编写、容器生命周期管理和 Docker Compose 使用指南。",
    "icon": "fab fa-docker",
    "bg_color_class": "bg-cyan-500/20",
    "text_color_class": "text-cyan-400",
    "url": "https://docs.docker.com",
    "score": 4.7,
    "tags": ["容器化", "DevOps", "部署"],
    "category": "DevOps"
  },
  {
    "name": "Kubernetes 文档",
    "description": "容器编排系统，自动化容器部署、扩展和管理。提供声明式配置、服务发现和负载均衡功能。文档包含架构解析、资源对象定义和集群运维最佳实践。",
    "icon": "fas fa-cubes",
    "bg_color_class": "bg-blue-600/20",
    "text_color_class": "text-blue-500",
    "url": "https://kubernetes.io",
    "score": 4.8,
    "tags": ["容器编排", "云原生", "微服务"],
    "category": "DevOps"
  },
  {
    "name": "GitHub Actions 文档",
    "description": "CI/CD 平台，集成在 GitHub 生态系统中。支持自动化构建、测试和部署工作流。文档包含工作流语法、自定义 action 开发和安全性最佳实践。",
    "icon": "fab fa-github",
    "bg_color_class": "bg-gray-600/20",
    "text_color_class": "text-gray-500",
    "url": "https://docs.github.com/actions",
    "score": 4.7,
    "tags": ["CI/CD", "自动化", "DevOps"],
    "category": "DevOps"
  },
  {
    "name": "Ansible 文档",
    "description": "自动化运维工具，使用 YAML 定义基础设施配置。提供无代理架构和幂等操作保证。文档包含 playbook 编写、模块开发和大型环境管理指南。",
    "icon": "fas fa-robot",
    "bg_color_class": "bg-red-500/20",
    "text_color_class": "text-red-400",
    "url": "https://docs.ansible.com",
    "score": 4.6,
    "tags": ["自动化", "配置管理", "DevOps"],
    "category": "DevOps"
  },
  {
    "name": "MongoDB 文档",
    "description": "面向文档的 NoSQL 数据库，使用 JSON-like 格式存储数据。提供灵活的数据模型、水平扩展和聚合框架。文档包含 CRUD 操作、索引优化和事务管理指南。",
    "icon": "fas fa-database",
    "bg_color_class": "bg-teal-500/20",
    "text_color_class": "text-teal-400",
    "url": "https://docs.mongodb.com",
    "score": 4.6,
    "tags": ["NoSQL", "数据库", "文档存储"],
    "category": "数据库"
  },
  {
    "name": "PostgreSQL 文档",
    "description": "开源关系型数据库，支持复杂查询和 ACID 事务。提供 JSON 支持、空间数据处理和全文搜索功能。文档包含 SQL 语法、性能调优和高可用性配置指南。",
    "icon": "fas fa-database",
    "bg_color_class": "bg-blue-400/20",
    "text_color_class": "text-blue-300",
    "url": "https://www.postgresql.org/docs",
    "score": 4.9,
    "tags": ["SQL", "关系型数据库", "ACID"],
    "category": "数据库"
  },
  {
    "name": "Redis 文档",
    "description": "内存数据结构存储，用作数据库、缓存和消息代理。支持字符串、哈希、列表等多种数据结构。文档包含持久化配置、集群部署和 Lua 脚本编程指南。",
    "icon": "fas fa-database",
    "bg_color_class": "bg-red-600/20",
    "text_color_class": "text-red-500",
    "url": "https://redis.io/docs",
    "score": 4.8,
    "tags": ["内存数据库", "缓存", "NoSQL"],
    "category": "数据库"
  },
  {
    "name": "MySQL 文档",
    "description": "开源关系型数据库管理系统，支持 SQL 标准和 ACID 事务。提供存储引擎、复制和分区功能。文档包含安装配置、性能优化和安全管理指南。",
    "icon": "fas fa-database",
    "bg_color_class": "bg-blue-500/20",
    "text_color_class": "text-blue-400",
    "url": "https://dev.mysql.com/doc",
    "score": 4.7,
    "tags": ["关系型数据库", "SQL", "OLTP"],
    "category": "数据库"
  },
  {
    "name": "AWS 文档",
    "description": "亚马逊云服务官方文档，涵盖 200+ 云服务。包含 EC2、S3、Lambda 等核心服务的配置指南、API 参考和架构最佳实践。提供 SDK 使用示例和安全性配置指引。",
    "icon": "fab fa-aws",
    "bg_color_class": "bg-orange-500/20",
    "text_color_class": "text-orange-400",
    "url": "https://docs.aws.amazon.com",
    "score": 4.7,
    "tags": ["云计算", "IaaS", "云服务"],
    "category": "云服务"
  },
  {
    "name": "Azure 文档",
    "description": "微软云服务平台文档，覆盖计算、存储、AI 和物联网服务。提供 ARM 模板、CLI 和 SDK 使用指南，包含架构设计案例和成本优化策略。",
    "icon": "fas fa-cloud",
    "bg_color_class": "bg-blue-500/20",
    "text_color_class": "text-blue-400",
    "url": "https://docs.microsoft.com/azure",
    "score": 4.7,
    "tags": ["云计算", "PaaS", "微软"],
    "category": "云服务"
  },
  {
    "name": "Google Cloud 文档",
    "description": "谷歌云平台技术文档，包含 Compute Engine、Cloud Storage 和 BigQuery 等服务。提供快速入门、API 参考和机器学习解决方案指南。",
    "icon": "fab fa-google",
    "bg_color_class": "bg-green-500/20",
    "text_color_class": "text-green-400",
    "url": "https://cloud.google.com/docs",
    "score": 4.7,
    "tags": ["云计算", "大数据", "GCP"],
    "category": "云服务"
  },
  {
    "name": "Vercel 文档",
    "description": "前端云平台，优化 Next.js 等现代框架的部署体验。提供无服务器函数、边缘网络和预览环境。文档包含项目配置、性能优化和自定义域名指南。",
    "icon": "fas fa-rocket",
    "bg_color_class": "bg-black/20",
    "text_color_class": "text-black",
    "url": "https://vercel.com/docs",
    "score": 4.8,
    "tags": ["前端部署", "Serverless", "JAMstack"],
    "category": "云服务"
  },
  {
    "name": "Vite 文档",
    "description": "下一代前端构建工具，提供极速的开发服务器启动和热更新。支持原生 ES 模块、按需编译和框架无关配置。文档包含插件开发、生产优化和框架集成指南。",
    "icon": "fas fa-bolt",
    "bg_color_class": "bg-red-500/20",
    "text_color_class": "text-red-400",
    "url": "https://vitejs.dev",
    "score": 4.8,
    "tags": ["构建工具", "前端", "开发工具"],
    "category": "构建工具"
  },
  {
    "name": "Webpack 文档",
    "description": "JavaScript 模块打包器，支持代码分割和资源优化。提供 loader 和插件系统处理各种静态资源。文档包含配置详解、性能优化和自定义插件开发指南。",
    "icon": "fas fa-box",
    "bg_color_class": "bg-yellow-500/20",
    "text_color_class": "text-yellow-400",
    "url": "https://webpack.js.org",
    "score": 4.6,
    "tags": ["模块打包", "构建工具", "代码分割"],
    "category": "构建工具"
  },
  {
    "name": "Rollup 文档",
    "description": "ESM 模块打包器，专为库开发优化。提供 Tree Shaking 和代码分割功能。文档包含配置指南、插件开发和与 Vite 集成的最佳实践。",
    "icon": "fas fa-dice-d20",
    "bg_color_class": "bg-red-500/20",
    "text_color_class": "text-red-400",
    "url": "https://rollupjs.org",
    "score": 4.7,
    "tags": ["模块打包", "库开发", "ESM"],
    "category": "构建工具"
  },
  {
    "name": "ESLint 文档",
    "description": "JavaScript/TypeScript 静态代码分析工具，强制执行编码规范。提供可配置规则和插件系统。文档包含规则配置、自定义规则开发和编辑器集成指南。",
    "icon": "fas fa-check-circle",
    "bg_color_class": "bg-purple-500/20",
    "text_color_class": "text-purple-400",
    "url": "https://eslint.org",
    "score": 4.8,
    "tags": ["代码质量", "静态分析", "JavaScript"],
    "category": "构建工具"
  },
  {
    "name": "GraphQL 文档",
    "description": "API 查询语言，提供强类型系统和声明式数据获取。支持客户端精确指定需要的数据结构。文档包含类型系统、查询语法和 Apollo/Relay 集成指南。",
    "icon": "fas fa-project-diagram",
    "bg_color_class": "bg-pink-500/20",
    "text_color_class": "text-pink-400",
    "url": "https://graphql.org",
    "score": 4.7,
    "tags": ["API", "数据查询", "类型系统"],
    "category": "API"
  },
  {
    "name": "RESTful API 设计指南",
    "description": "REST 架构风格最佳实践，包含资源命名、HTTP 方法使用和状态码规范。文档涵盖版本控制、分页设计和安全性考虑，适用于各种后端框架实现。",
    "icon": "fas fa-exchange-alt",
    "bg_color_class": "bg-blue-600/20",
    "text_color_class": "text-blue-500",
    "url": "https://restfulapi.net",
    "score": 4.7,
    "tags": ["API设计", "REST", "Web服务"],
    "category": "API"
  },
  {
    "name": "Express.js 文档",
    "description": "Node.js Web 应用框架，提供简洁的路由和中间件系统。支持 RESTful API 开发，具有丰富的中间件生态。文档包含路由配置、错误处理和模板引擎集成指南。",
    "icon": "fas fa-server",
    "bg_color_class": "bg-gray-500/20",
    "text_color_class": "text-gray-400",
    "url": "https://expressjs.com",
    "score": 4.5,
    "tags": ["后端框架", "Node.js", "RESTful"],
    "category": "后端框架"
  },
  {
    "name": "Next.js 文档",
    "description": "React 框架，支持服务端渲染和静态站点生成。提供文件路由系统、API 路由和增量静态再生功能。文档包含数据获取策略、性能优化和部署指南。",
    "icon": "fas fa-forward",
    "bg_color_class": "bg-black/20",
    "text_color_class": "text-black",
    "url": "https://nextjs.org",
    "score": 4.9,
    "tags": ["SSR", "React框架", "全栈"],
    "category": "前端框架"
  },
  {
    "name": "Nuxt.js 文档",
    "description": "基于 Vue.js 的应用框架，支持服务端渲染和静态站点生成。提供模块化架构和自动路由配置。文档包含数据获取、状态管理和部署优化指南。",
    "icon": "fas fa-forward",
    "bg_color_class": "bg-green-700/20",
    "text_color_class": "text-green-600",
    "url": "https://nuxtjs.org",
    "score": 4.8,
    "tags": ["Vue框架", "SSR", "静态生成"],
    "category": "前端框架"
  },
  {
    "name": "Tailwind CSS 文档",
    "description": "实用优先的 CSS 框架，提供原子化类构建定制设计。支持响应式设计和深色模式，可配置性强。文档包含核心概念、自定义主题和优化生产构建指南。",
    "icon": "fas fa-wind",
    "bg_color_class": "bg-teal-600/20",
    "text_color_class": "text-teal-500",
    "url": "https://tailwindcss.com",
    "score": 4.8,
    "tags": ["CSS框架", "实用工具", "响应式设计"],
    "category": "CSS框架"
  },
  {
    "name": "Bootstrap 文档",
    "description": "最流行的前端组件库，提供响应式网格系统和预定义组件。包含表单、导航栏和模态框等 UI 元素。文档包含定制主题、组件使用和布局设计指南。",
    "icon": "fab fa-bootstrap",
    "bg_color_class": "bg-purple-600/20",
    "text_color_class": "text-purple-500",
    "url": "https://getbootstrap.com",
    "score": 4.7,
    "tags": ["CSS框架", "响应式", "UI组件"],
    "category": "CSS框架"
  },
  {
    "name": "Sass 文档",
    "description": "CSS 预处理器，扩展 CSS 语言功能。提供变量、嵌套规则和混合宏等特性。文档包含语法指南、模块系统和与现代构建工具集成的最佳实践。",
    "icon": "fab fa-sass",
    "bg_color_class": "bg-pink-600/20",
    "text_color_class": "text-pink-500",
    "url": "https://sass-lang.com/documentation",
    "score": 4.8,
    "tags": ["CSS预处理器", "样式工具", "前端"],
    "category": "CSS框架"
  },
  {
    "name": "Jest 文档",
    "description": "JavaScript 测试框架，支持快照测试和代码覆盖率。提供零配置体验和模拟功能。文档包含测试编写、异步测试和 React/Vue 组件测试指南。",
    "icon": "fas fa-vial",
    "bg_color_class": "bg-red-600/20",
    "text_color_class": "text-red-500",
    "url": "https://jestjs.io",
    "score": 4.7,
    "tags": ["测试框架", "单元测试", "覆盖率"],
    "category": "测试"
  },
  {
    "name": "Cypress 文档",
    "description": "端到端测试框架，提供实时重载和时间旅行调试。支持跨浏览器测试和网络请求拦截。文档包含测试编写、自定义命令和持续集成配置指南。",
    "icon": "fas fa-check-double",
    "bg_color_class": "bg-indigo-600/20",
    "text_color_class": "text-indigo-500",
    "url": "https://docs.cypress.io",
    "score": 4.8,
    "tags": ["E2E测试", "自动化测试", "前端"],
    "category": "测试"
  },
  {
    "name": "Electron 文档",
    "description": "使用 Web 技术构建跨平台桌面应用。基于 Chromium 和 Node.js，支持原生 API 访问。文档包含应用架构、进程通信和打包分发指南。",
    "icon": "fas fa-desktop",
    "bg_color_class": "bg-indigo-600/20",
    "text_color_class": "text-indigo-500",
    "url": "https://www.electronjs.org",
    "score": 4.6,
    "tags": ["桌面应用", "跨平台", "JavaScript"],
    "category": "桌面开发"
  },
  {
    "name": "Tauri 文档",
    "description": "使用 Rust 构建小型、快速桌面应用的框架。基于 Web 技术，提供比 Electron 更小的二进制文件。文档包含项目创建、API 绑定和跨平台打包指南。",
    "icon": "fas fa-window-restore",
    "bg_color_class": "bg-purple-600/20",
    "text_color_class": "text-purple-500",
    "url": "https://tauri.app",
    "score": 4.7,
    "tags": ["桌面应用", "Rust", "轻量级"],
    "category": "桌面开发"
  },
  {
    "name": "React Native 文档",
    "description": "使用 React 构建原生移动应用的框架。提供跨平台组件和原生模块集成。文档包含组件使用、导航配置和性能优化指南。",
    "icon": "fas fa-mobile-alt",
    "bg_color_class": "bg-blue-700/20",
    "text_color_class": "text-blue-600",
    "url": "https://reactnative.dev",
    "score": 4.5,
    "tags": ["移动开发", "跨平台", "React"],
    "category": "移动开发"
  },
  {
    "name": "Flutter 文档",
    "description": "Google 的 UI 工具包，用于构建原生编译的多平台应用。使用 Dart 语言，提供丰富的组件库。文档包含 Widget 使用、状态管理和平台通道指南。",
    "icon": "fas fa-mobile",
    "bg_color_class": "bg-blue-500/20",
    "text_color_class": "text-blue-400",
    "url": "https://flutter.dev",
    "score": 4.8,
    "tags": ["移动开发", "跨平台", "Dart"],
    "category": "移动开发"
  },
  {
    "name": "Rust 文档",
    "description": "系统编程语言，注重安全性和并发性。提供所有权系统和零成本抽象。文档包含语言教程、标准库参考和 Cargo 包管理指南。",
    "icon": "fas fa-cog",
    "bg_color_class": "bg-orange-600/20",
    "text_color_class": "text-orange-500",
    "url": "https://www.rust-lang.org",
    "score": 4.9,
    "tags": ["系统编程", "内存安全", "高性能"],
    "category": "编程语言"
  },
  {
    "name": "Go 文档",
    "description": "静态类型编译语言，专为并发设计。提供垃圾回收和简洁语法。文档包含语言规范、标准库和并发模式指南。",
    "icon": "fas fa-golang",
    "bg_color_class": "bg-cyan-600/20",
    "text_color_class": "text-cyan-500",
    "url": "https://golang.org",
    "score": 4.8,
    "tags": ["并发", "系统编程", "微服务"],
    "category": "编程语言"
  },
  {
    "name": "NestJS 文档",
    "description": "Node.js 渐进式框架，构建高效可扩展服务端应用。采用模块化架构，支持 TypeScript。文档包含控制器、提供者、中间件和微服务指南。",
    "icon": "fas fa-feather",
    "bg_color_class": "bg-red-700/20",
    "text_color_class": "text-red-600",
    "url": "https://nestjs.com",
    "score": 4.7,
    "tags": ["Node.js框架", "TypeScript", "微服务"],
    "category": "后端框架"
  },
  {
    "name": "Three.js 文档",
    "description": "WebGL 3D 库，简化浏览器中3D内容创建。提供场景图、材质和动画系统。文档包含基础概念、示例代码和性能优化指南。",
    "icon": "fas fa-cube",
    "bg_color_class": "bg-purple-700/20",
    "text_color_class": "text-purple-600",
    "url": "https://threejs.org",
    "score": 4.6,
    "tags": ["WebGL", "3D渲染", "游戏开发"],
    "category": "图形与游戏"
  },
  {
    "name": "TensorFlow.js 文档",
    "description": "浏览器和 Node.js 的机器学习库。支持模型训练、转换和部署。文档包含预训练模型使用、自定义模型开发和可视化指南。",
    "icon": "fas fa-brain",
    "bg_color_class": "bg-orange-700/20",
    "text_color_class": "text-orange-600",
    "url": "https://www.tensorflow.org/js",
    "score": 4.5,
    "tags": ["机器学习", "AI", "神经网络"],
    "category": "AI与数据科学"
  },
  {
    "name": "D3.js 文档",
    "description": "数据驱动文档库，用于创建动态数据可视化。提供数据绑定和 DOM 操作功能。文档包含核心概念、力导向图和地理可视化指南。",
    "icon": "fas fa-chart-bar",
    "bg_color_class": "bg-green-600/20",
    "text_color_class": "text-green-500",
    "url": "https://d3js.org",
    "score": 4.7,
    "tags": ["数据可视化", "图表", "数据分析"],
    "category": "数据可视化"
  },
  {
    "name": "Socket.IO 文档",
    "description": "实时应用框架，支持双向事件通信。提供自动重连和房间功能。文档包含客户端/服务器 API、广播机制和性能优化指南。",
    "icon": "fas fa-network-wired",
    "bg_color_class": "bg-yellow-600/20",
    "text_color_class": "text-yellow-500",
    "url": "https://socket.io",
    "score": 4.6,
    "tags": ["实时通信", "WebSocket", "事件驱动"],
    "category": "网络通信"
  },
  {
    "name": "Redux 文档",
    "description": "JavaScript 状态管理容器，提供可预测的状态管理。基于 Flux 架构，支持中间件扩展。文档包含核心概念、异步处理和与 React 集成指南。",
    "icon": "fas fa-sync-alt",
    "bg_color_class": "bg-purple-600/20",
    "text_color_class": "text-purple-500",
    "url": "https://redux.js.org",
    "score": 4.7,
    "tags": ["状态管理", "JavaScript", "React"],
    "category": "前端框架"
  },
  {
    "name": "Firebase 文档",
    "description": "Google 的后端即服务平台，提供实时数据库、身份验证和云函数。支持 Web 和移动应用开发。文档包含 SDK 使用、安全规则和性能监控指南。",
    "icon": "fas fa-fire",
    "bg_color_class": "bg-yellow-500/20",
    "text_color_class": "text-yellow-400",
    "url": "https://firebase.google.com/docs",
    "score": 4.7,
    "tags": ["BaaS", "实时数据库", "无服务器"],
    "category": "云服务"
  },
  {
    "name": "WebAssembly 文档",
    "description": "二进制指令格式，用于在 Web 浏览器中运行高性能代码。支持 C/C++/Rust 等语言编译。文档包含核心概念、Emscripten 工具链和 JavaScript 互操作指南。",
    "icon": "fas fa-microchip",
    "bg_color_class": "bg-violet-500/20",
    "text_color_class": "text-violet-400",
    "url": "https://webassembly.org",
    "score": 4.6,
    "tags": ["高性能", "编译目标", "浏览器"],
    "category": "前端框架"
  },
  {
    "name": "Puppeteer 文档",
    "description": "Node.js 库，提供高级 API 控制 Chrome/Chromium。支持网页截图、PDF 生成和自动化测试。文档包含浏览器操作、页面交互和性能分析指南。",
    "icon": "fas fa-robot",
    "bg_color_class": "bg-green-600/20",
    "text_color_class": "text-green-500",
    "url": "https://pptr.dev",
    "score": 4.7,
    "tags": ["浏览器自动化", "测试", "爬虫"],
    "category": "测试"
  },
  {
    "name": "Figma 插件 API",
    "description": "设计工具 Figma 的插件开发接口，支持扩展编辑器功能。提供 UI 组件、事件监听和文件操作 API。文档包含插件创建、发布和与设计系统集成指南。",
    "icon": "fab fa-figma",
    "bg_color_class": "bg-purple-500/20",
    "text_color_class": "text-purple-400",
    "url": "https://www.figma.com/plugin-docs",
    "score": 4.8,
    "tags": ["设计工具", "插件开发", "UI设计"],
    "category": "设计开发"
  },
  {
    "name": "WebRTC 文档",
    "description": "实时通信技术，支持浏览器间音视频流传输。提供 P2P 连接建立和数据通道功能。文档包含 API 使用、信令服务器实现和安全性最佳实践。",
    "icon": "fas fa-video",
    "bg_color_class": "bg-blue-500/20",
    "text_color_class": "text-blue-400",
    "url": "https://webrtc.org",
    "score": 4.7,
    "tags": ["实时通信", "音视频", "P2P"],
    "category": "网络通信"
  },
  {
    "name": "RxJS 文档",
    "description": "响应式编程库，使用可观察序列处理异步操作。提供操作符组合和错误处理功能。文档包含核心概念、操作符使用和与框架集成指南。",
    "icon": "fas fa-bolt",
    "bg_color_class": "bg-pink-600/20",
    "text_color_class": "text-pink-500",
    "url": "https://rxjs.dev",
    "score": 4.6,
    "tags": ["响应式编程", "异步处理", "JavaScript"],
    "category": "编程范式"
  },
  {
    "name": "Kotlin 文档",
    "description": "现代编程语言，运行于 JVM 和 JavaScript 环境。提供空安全、扩展函数和协程特性。文档包含语言基础、Android 开发和跨平台应用指南。",
    "icon": "fas fa-code",
    "bg_color_class": "bg-purple-600/20",
    "text_color_class": "text-purple-500",
    "url": "https://kotlinlang.org/docs",
    "score": 4.8,
    "tags": ["编程语言", "Android", "JVM"],
    "category": "编程语言"
  },
  {
    "name": "Deno 文档",
    "description": "现代 JavaScript/TypeScript 运行时，内置安全性和工具链。提供标准库和模块系统。文档包含核心概念、Web API 和与 Node.js 差异指南。",
    "icon": "fas fa-dragon",
    "bg_color_class": "bg-gray-600/20",
    "text_color_class": "text-gray-500",
    "url": "https://deno.land/manual",
    "score": 4.7,
    "tags": ["JavaScript运行时", "TypeScript", "安全"],
    "category": "后端开发"
  },
  {
    "name": "Jest 文档",
    "description": "JavaScript 测试框架，支持快照测试和代码覆盖率。提供零配置体验和模拟功能。文档包含测试编写、异步测试和 React/Vue 组件测试指南。",
    "icon": "fas fa-vial",
    "bg_color_class": "bg-red-600/20",
    "text_color_class": "text-red-500",
    "url": "https://jestjs.io",
    "score": 4.7,
    "tags": ["测试框架", "单元测试", "覆盖率"],
    "category": "测试"
  },
  {
    "name": "Storybook 文档",
    "description": "UI 组件开发环境，支持独立开发和测试组件。提供交互式测试和文档生成功能。文档包含组件编写、插件开发和团队协作指南。",
    "icon": "fas fa-book",
    "bg_color_class": "bg-pink-500/20",
    "text_color_class": "text-pink-400",
    "url": "https://storybook.js.org",
    "score": 4.8,
    "tags": ["组件开发", "UI测试", "文档工具"],
    "category": "测试"
  },
  {
    "name": "Apollo GraphQL 文档",
    "description": "GraphQL 实现框架，提供客户端和服务器端工具。支持状态管理和缓存优化。文档包含 API 设计、查询管理和错误处理指南。",
    "icon": "fas fa-project-diagram",
    "bg_color_class": "bg-indigo-700/20",
    "text_color_class": "text-indigo-600",
    "url": "https://www.apollographql.com/docs",
    "score": 4.7,
    "tags": ["GraphQL", "API", "状态管理"],
    "category": "API"
  },
  {
    "name": "Gatsby 文档",
    "description": "基于 React 的静态站点生成器，优化内容型网站性能。提供数据层和插件系统。文档包含数据获取、页面创建和部署优化指南。",
    "icon": "fas fa-bolt",
    "bg_color_class": "bg-purple-600/20",
    "text_color_class": "text-purple-500",
    "url": "https://www.gatsbyjs.com/docs",
    "score": 4.7,
    "tags": ["静态站点", "React", "JAMstack"],
    "category": "前端框架"
  },
  {
    "name": "Prisma 文档",
    "description": "下一代 ORM，提供类型安全的数据库访问。支持迁移、查询构建和数据建模。文档包含模型定义、事务管理和性能优化指南。",
    "icon": "fas fa-database",
    "bg_color_class": "bg-teal-600/20",
    "text_color_class": "text-teal-500",
    "url": "https://www.prisma.io/docs",
    "score": 4.8,
    "tags": ["ORM", "数据库", "TypeScript"],
    "category": "数据库"
  },
  {
    "name": "FastAPI 文档",
    "description": "现代 Python Web 框架，基于类型提示构建高性能 API。提供自动文档生成和依赖注入。文档包含路由定义、请求验证和异步处理指南。",
    "icon": "fas fa-bolt",
    "bg_color_class": "bg-green-600/20",
    "text_color_class": "text-green-500",
    "url": "https://fastapi.tiangolo.com",
    "score": 4.9,
    "tags": ["Python框架", "API开发", "高性能"],
    "category": "后端框架"
  },
  {
    "name": "Pandas 文档",
    "description": "Python 数据分析库，提供数据结构和操作工具。支持数据清洗、转换和可视化。文档包含数据结构、数据处理和与数据库集成指南。",
    "icon": "fas fa-table",
    "bg_color_class": "bg-blue-600/20",
    "text_color_class": "text-blue-500",
    "url": "https://pandas.pydata.org/docs",
    "score": 4.8,
    "tags": ["数据分析", "Python", "数据处理"],
    "category": "AI与数据科学"
  },
  {
    "name": "Unity 文档",
    "description": "跨平台游戏引擎，支持 2D/3D 游戏开发。提供物理引擎、动画系统和脚本 API。文档包含场景编辑、脚本编写和平台发布指南。",
    "icon": "fas fa-gamepad",
    "bg_color_class": "bg-gray-700/20",
    "text_color_class": "text-gray-600",
    "url": "https://docs.unity3d.com",
    "score": 4.7,
    "tags": ["游戏开发", "3D引擎", "跨平台"],
    "category": "图形与游戏"
  },
  {
    "name": "JWT 手册",
    "description": "JSON Web Tokens 标准实现指南，包含令牌结构、签名算法和安全性考虑。提供多种语言实现示例和最佳实践。",
    "icon": "fas fa-key",
    "bg_color_class": "bg-yellow-500/20",
    "text_color_class": "text-yellow-400",
    "url": "https://jwt.io/introduction",
    "score": 4.6,
    "tags": ["认证", "安全", "API"],
    "category": "安全"
  },
  {
    "name": "OAuth 2.0 规范",
    "description": "行业标准授权协议，提供安全的 API 访问控制。包含授权流程、令牌类型和安全性考虑。文档涵盖各种授权场景的实现指南。",
    "icon": "fas fa-shield-alt",
    "bg_color_class": "bg-blue-700/20",
    "text_color_class": "text-blue-600",
    "url": "https://oauth.net/2",
    "score": 4.7,
    "tags": ["认证", "授权", "安全"],
    "category": "安全"
  },
  {
    "name": "Web 内容无障碍指南 (WCAG)",
    "description": "国际 Web 无障碍标准，确保残障人士可访问数字内容。提供可感知性、可操作性等原则的详细要求。文档包含实现技术和测试方法指南。",
    "icon": "fas fa-universal-access",
    "bg_color_class": "bg-green-700/20",
    "text_color_class": "text-green-600",
    "url": "https://www.w3.org/WAI/standards-guidelines/wcag",
    "score": 4.8,
    "tags": ["无障碍", "Web标准", "合规性"],
    "category": "Web标准"
  },
  {
    "name": "MDN Web 文档",
    "description": "Web 技术综合文档，涵盖 HTML、CSS 和 JavaScript 标准 API。提供浏览器兼容性数据和实时示例。",
    "icon": "fab fa-mdn",
    "bg_color_class": "bg-blue-500/20",
    "text_color_class": "text-blue-400",
    "url": "https://developer.mozilla.org",
    "score": 4.9,
    "tags": ["Web开发", "参考文档", "浏览器API"],
    "category": "Web标准"
  },
  {
    "name": "Git 文档",
    "description": "分布式版本控制系统，支持非线性开发和代码协作。提供分支管理、合并策略和钩子功能。文档包含命令参考、工作流指南和高级技巧。",
    "icon": "fab fa-git-alt",
    "bg_color_class": "bg-orange-600/20",
    "text_color_class": "text-orange-500",
    "url": "https://git-scm.com/doc",
    "score": 4.9,
    "tags": ["版本控制", "协作", "开发工具"],
    "category": "DevOps"
  },
  {
    "name": "Nginx 文档",
    "description": "高性能 HTTP 服务器和反向代理，支持负载均衡和缓存。提供模块化架构和灵活的配置系统。文档包含配置语法、性能优化和安全加固指南。",
    "icon": "fas fa-server",
    "bg_color_class": "bg-green-600/20",
    "text_color_class": "text-green-500",
    "url": "https://nginx.org/en/docs",
    "score": 4.8,
    "tags": ["Web服务器", "反向代理", "负载均衡"],
    "category": "DevOps"
  },
  {
    "name": "Kafka 文档",
    "description": "分布式事件流平台，支持高吞吐量消息处理。提供持久化存储、流处理和连接器框架。文档包含架构设计、API 使用和集群部署指南。",
    "icon": "fas fa-stream",
    "bg_color_class": "bg-blue-600/20",
    "text_color_class": "text-blue-500",
    "url": "https://kafka.apache.org/documentation",
    "score": 4.7,
    "tags": ["消息队列", "流处理", "分布式系统"],
    "category": "后端开发"
  },
  {
    "name": "Elasticsearch 文档",
    "description": "分布式搜索和分析引擎，提供近实时搜索和复杂聚合功能。基于 Lucene 构建，支持全文检索。文档包含索引管理、查询 DSL 和集群运维指南。",
    "icon": "fas fa-search",
    "bg_color_class": "bg-yellow-600/20",
    "text_color_class": "text-yellow-500",
    "url": "https://www.elastic.co/guide/index.html",
    "score": 4.7,
    "tags": ["搜索引擎", "数据分析", "NoSQL"],
    "category": "数据库"
  }
]
